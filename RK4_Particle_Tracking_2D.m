function [XNEW,YNEW] = RK4_Particle_Tracking_2D(XP,YP,X,Y,UX,UY,DT)
% 4th order Runge-Kutta Particle Tracking method
% Input var:
% XP and YP are the original particle location
% X and Y are the velocity field, 2D matrices generated by 'meshgrid'
% UX and UY are the 2D matrices for velocity
% DT: time step
% Output var:
% XNEW and YNEW are the updated values for XP and YP

% extrapval sets to be 0 if the particle is outside the XY domain
extrapval = 0.0;

% interpolate the velocity at the original particle position
UXP = interp2(X,Y,UX,XP,YP,'cubic',extrapval);
UYP = interp2(X,Y,UY,XP,YP,'cubic',extrapval);

K1 = DT * UXP;
L1 = DT * UYP;
K2 = DT * interp2(X,Y,UX,XP+K1/2,YP+L1/2,'cubic',extrapval);
L2 = DT * interp2(X,Y,UY,XP+K1/2,YP+L1/2,'cubic',extrapval);
K3 = DT * interp2(X,Y,UX,XP+K2/2,YP+L2/2,'cubic',extrapval);
L3 = DT * interp2(X,Y,UY,XP+K2/2,YP+L2/2,'cubic',extrapval);
K4 = DT * interp2(X,Y,UX,XP+K3,YP+L3,'cubic',extrapval);
L4 = DT * interp2(X,Y,UY,XP+K3,YP+L3,'cubic',extrapval);
XNEW = XP + (K1+2*K2+2*K3+K4)/6;
YNEW = YP + (L1+2*L2+2*L3+L4)/6;